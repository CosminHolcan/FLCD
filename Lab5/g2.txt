Nonterminals : Program|StatementsList|SimplStatement|ConditionStatement|IfStatement|WhileStatement|AssignStatement|DeclStatement|ReadStatement|WriteStatement|CheckStatement|Expression|RelationalOp|Id|Dual|LogicalOp|Term|Factor|Integer|SimpleDeclStatement|ComponentDeclStatement|ListIds|Type|ListSimpleDeclStatement|String|Char|Letter|ListChars|Character|Number|NotZeroDigit|ListDigits|Digit
Alphabet: = | + | * | - | / | % | < | <= | == | >= | > | != | and | or | | ( | ) | { | } | , | ; | declare | readFromInput | writeToOutput | int | char | string | dual | component | ifTrue | elseDo | whileCondition | do | return | true | false | a..z | A..Z | 0..9 | _ | "
Starting symbol : Program
Productions :
Program -> StatementsList
StatementsList -> SimplStatement ; | ConditionStatement | SimplStatement ; StatementsList | ConditionStatement StatementsList
ConditionStatement -> IfStatement | WhileStatement
SimplStatement -> AssignStatement | DeclStatement | ReadStatement | WriteStatement
IfStatement -> ifTrue ( CheckStatement ) { StatementsList } | ifTrue ( CheckStatement ) { StatementsList } elseDo { StatementsList }
WhileStatement -> whileCondition ( CheckStatement ) { StatementsList }
DeclStatement -> SimpleDeclStatement | ComponentDeclStatement
SimpleDeclStatement -> declare Type ListIds
ComponentDeclStatement -> component Id { ListSimpleDeclStatement }
ReadStatement -> readFromInput ( Id )
WriteStatement -> writeToOutput ( Id ) | writeToOutput ( Dual ) |writeToOutput ( Integer )| writeToOutput ( String ) | writeToOutput ( Char )
ListSimpleDeclStatement -> SimpleDeclStatement ; | SimpleDeclStatement ; ListSimpleDeclStatement
ListIds -> Id , ListIds | Id
Type -> int | char | string | dual
CheckStatement -> Expression RelationalOp Expression | Id | Dual | ( CheckStatement ) LogicalOp ( CheckStatement )
RelationalOp -> < | <= | == | >= | > | !=
LogicalOp -> and | or
Dual -> true | false
Expression -> Term | Expression + Term | Expression - Term
Term -> Factor | Term * Factor | Term / Factor | Term % Factor
Factor -> ( Expression ) | Id | Integer
Id -> _ ListChars | Letter ListChars | Letter
ListChars -> Character ListChars | Character
Letter -> a..z | A..Z
Character -> a..z | A..Z | 0..9
String -> " ListChars "
Char -> " Character "
Integer -> 0 | + Number | - Number | Number
Number -> NotZeroDigit ListDigits | NotZeroDigit
NotZeroDigit -> 1..9
ListDigits -> Digit | Digit ListDigits
Digit -> 0..9
